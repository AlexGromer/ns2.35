#!/usr/bin/perl -w

use strict;

use Cwd;

my $dir = getcwd;

my $whiskerdir = $dir . q{/../../../tcp/remy/rats/new/};
my $arrSize = @ARGV;
if ($arrSize < 2) {
     print "Enter topology file, followed by source-destination file\n";
     exit 1;
}

if (-d "results/Dumbbell") {
     print "Will not run, results/Dumbbell already exists. Either delete it or specify another directory.\n";
     exit 1;
}

if (-d "results/Dumbbell-rational-delta0.1") {
     print "Will not run, results/Dumbbell-rational-delta0.1 already exists. Either delete it or specify another directory.\n";
     exit 1;
}

if (-d "results/Dumbbell-rational-delta1") {
     print "Will not run, results/Dumbbell-rational-delta1 already exists. Either delete it or specify another directory.\n";
     exit 1;
}

if (-d "results/Dumbbell-rational-delta10") {
     print "Will not run, results/Dumbbell-rational-delta10 already exists. Either delete it or specify another directory.\n";
     exit 1;
}

system qq{python runremy.py -g $ARGV[0] -s $ARGV[1] -d results/Dumbbell  -p TCP/Newreno &};
system qq{python runremy.py -g $ARGV[0] -s $ARGV[1] -d results/Dumbbell  -p TCP/Linux/cubic &};
system qq{python runremy.py -g $ARGV[0] -s $ARGV[1] -d results/Dumbbell  -p TCP/Linux/compound &};
system qq{python runremy.py -g $ARGV[0] -s $ARGV[1] -d results/Dumbbell  -p TCP/Vegas &};
system qq{python runremy.py -g $ARGV[0] -s $ARGV[1] -d results/Dumbbell  -p TCP/Reno/XCP &};
system qq{python runremy.py -g $ARGV[0] -s $ARGV[1] -d results/Dumbbell  -p Cubic/sfqCoDel &};

$ENV{ WHISKERS } = $whiskerdir . q{delta0.1.dna};
system qq{python runremy.py -g $ARGV[0] -s $ARGV[1] -d results/Dumbbell-rational-delta0.1  -p TCP/Rational &};

$ENV{'WHISKERS'} = $whiskerdir . q{delta1.dna};
system qq{python runremy.py -g $ARGV[0] -s $ARGV[1] -d results/Dumbbell-rational-delta1  -p TCP/Rational &};

$ENV{'WHISKERS'} = $whiskerdir . q{delta10.dna};
system qq{python runremy.py -g $ARGV[0] -s $ARGV[1] -d results/Dumbbell-rational-delta10  -p TCP/Rational &};
